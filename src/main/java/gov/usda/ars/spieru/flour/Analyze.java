/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package gov.usda.ars.spieru.flour;

import ij.IJ;
import ij.ImagePlus;
import java.io.File;

/**
 *
 * @author wjrfo
 */
public class Analyze {

    static String macro1 = "// Color Thresholder 1.53k\n"
            + "// Autogenerated macro, single images only!\n"
            + "min=newArray(3);\n"
            + "max=newArray(3);\n"
            + "filter=newArray(3);\n"
            + "a=getTitle();\n"
            + "call(\"ij.plugin.frame.ColorThresholder.RGBtoYUV\");\n"
            + "run(\"RGB Stack\");\n"
            + "run(\"Convert Stack to Images\");\n"
            + "selectWindow(\"Red\");\n"
            + "rename(\"0\");\n"
            + "selectWindow(\"Green\");\n"
            + "rename(\"1\");\n"
            + "selectWindow(\"Blue\");\n"
            + "rename(\"2\");\n"
            + "min[0]=212;\n"
            + "max[0]=255;\n"
            + "filter[0]=\"pass\";\n"
            + "min[1]=0;\n"
            + "max[1]=255;\n"
            + "filter[1]=\"pass\";\n"
            + "min[2]=0;\n"
            + "max[2]=255;\n"
            + "filter[2]=\"pass\";\n"
            + "for (i=0;i<3;i++){\n"
            + "  selectWindow(\"\"+i);\n"
            + "  setThreshold(min[i], max[i]);\n"
            + "  run(\"Convert to Mask\");\n"
            + "  if (filter[i]==\"stop\")  run(\"Invert\");\n"
            + "}\n"
            + "imageCalculator(\"AND create\", \"0\",\"1\");\n"
            + "imageCalculator(\"AND create\", \"Result of 0\",\"2\");\n"
            + "for (i=0;i<3;i++){\n"
            + "  selectWindow(\"\"+i);\n"
            + "  close();\n"
            + "}\n"
            + "selectWindow(\"Result of 0\");\n"
            + "close();\n"
            + "selectWindow(\"Result of Result of 0\");\n"
            + "rename(a);\n"
            + "// Colour Thresholding-------------";

    public Analyze(File inpFil) {
        ImagePlus ip0 = IJ.openImage(inpFil.getAbsolutePath());
        ip0.show();
        ImagePlus ip1 = ip0.duplicate();
        ip1.getProcessor().smooth();
        
        IJ.run(ip1, "Color Threshold...", "");
        IJ.runMacro(macro1);
//        IJ.run("close");
        ip1.show();

    }
}
