/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gov.usda.ars.spieru.chalk.view;

import gov.usda.ars.spieru.chalk.model.Config;
import gov.usda.ars.spieru.chalk.model.DataStore;
import javax.swing.JFileChooser;

/**
 *
 * @author wjrfo
 */
public class ConfigDialog extends javax.swing.JDialog {

    private Config configData = new Config();

    public ConfigDialog(java.awt.Frame parent, DataStore dataStore) {
        this(parent, true);
        configData = dataStore.getConfig();
    }   

    /**
     * Creates new form Config
     */
    public ConfigDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        jTFKernelThresholdValueHi.setInputVerifier(new ThresholdInputVerifer(jTFKernelThresholdValueLo, jTFKernelThresholdValueHi));
        jTFKernelThresholdValueLo.setInputVerifier(new ThresholdInputVerifer(jTFKernelThresholdValueLo, jTFKernelThresholdValueHi));
        jTFChalkThresholdValueHi.setInputVerifier(new ThresholdInputVerifer(jTFChalkThresholdValueLo, jTFChalkThresholdValueHi));
        jTFChalkThresholdValueLo.setInputVerifier(new ThresholdInputVerifer(jTFChalkThresholdValueLo, jTFChalkThresholdValueHi));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTPMain = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jTFScanDirectory = new javax.swing.JTextField();
        JBScanDirectoryFileChooser = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jCBLightSource = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jCBDPI = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFBaseMeasurement = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFBaseAnalyzeParticles = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTFKernelThresholdValueLo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTFKernelThresholdValueHi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFKernelMeasurement = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTFChalkThresholdValueLo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTFChalkThresholdValueHi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTFChalkAnalyzeParticles = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTFKernelAnalyzeParticles = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTFChalkMeasurement = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jBLoad = new javax.swing.JButton();
        jBSave = new javax.swing.JButton();
        jBExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTFScanDirectory.setText("jTextField1");

        JBScanDirectoryFileChooser.setText("Select");
        JBScanDirectoryFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBScanDirectoryFileChooserActionPerformed(evt);
            }
        });

        jLabel11.setText("Scan Output Directory");

        jCBLightSource.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Front lit", "Back lit" }));
        jCBLightSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBLightSourceActionPerformed(evt);
            }
        });

        jLabel13.setText("Light Source");

        jLabel14.setText("DPI");

        jCBDPI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "75", "150", "300", "600", "1200" }));
        jCBDPI.setSelectedIndex(2);
        jCBDPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBDPIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBLightSource, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jTFScanDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JBScanDirectoryFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCBDPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(321, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFScanDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBScanDirectoryFileChooser))
                .addGap(13, 13, 13)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBLightSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBDPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        jTPMain.addTab("Scanner", jPanel7);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Measurement ");
        jPanel6.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jTFBaseMeasurement.setText("jTextField1");
        jTFBaseMeasurement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFBaseMeasurementActionPerformed(evt);
            }
        });
        jPanel6.add(jTFBaseMeasurement, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 620, -1));

        jLabel2.setText("Analyze Patricles");
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 90, 10));

        jTFBaseAnalyzeParticles.setText("jTextField2");
        jTFBaseAnalyzeParticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFBaseAnalyzeParticlesActionPerformed(evt);
            }
        });
        jPanel6.add(jTFBaseAnalyzeParticles, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 610, -1));

        jLabel5.setText("Threshold values");
        jPanel6.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel6.setText("Low:");
        jPanel6.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        jTFKernelThresholdValueLo.setColumns(5);
        jTFKernelThresholdValueLo.setText("0");
        jTFKernelThresholdValueLo.setToolTipText("");
        jTFKernelThresholdValueLo.setMinimumSize(new java.awt.Dimension(60, 20));
        jTFKernelThresholdValueLo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelThresholdValueLoActionPerformed(evt);
            }
        });
        jPanel6.add(jTFKernelThresholdValueLo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, -1, -1));

        jLabel7.setText("High:");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

        jTFKernelThresholdValueHi.setColumns(5);
        jTFKernelThresholdValueHi.setText("255");
        jTFKernelThresholdValueHi.setMinimumSize(new java.awt.Dimension(60, 20));
        jTFKernelThresholdValueHi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelThresholdValueHiActionPerformed(evt);
            }
        });
        jPanel6.add(jTFKernelThresholdValueHi, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, -1));

        jLabel3.setText("Analyze Patricles");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jTFKernelMeasurement.setText("jTextField2");
        jTFKernelMeasurement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelMeasurementActionPerformed(evt);
            }
        });
        jPanel6.add(jTFKernelMeasurement, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 620, -1));

        jLabel12.setText("Kernel Step");
        jPanel6.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel8.setText("Threshold values");
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jLabel9.setText("Low:");
        jPanel6.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));

        jTFChalkThresholdValueLo.setColumns(5);
        jTFChalkThresholdValueLo.setText("0");
        jTFChalkThresholdValueLo.setMinimumSize(new java.awt.Dimension(60, 20));
        jTFChalkThresholdValueLo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkThresholdValueLoActionPerformed(evt);
            }
        });
        jPanel6.add(jTFChalkThresholdValueLo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, -1, -1));

        jLabel10.setText("High:");
        jPanel6.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, -1, -1));

        jTFChalkThresholdValueHi.setColumns(5);
        jTFChalkThresholdValueHi.setText("255");
        jTFChalkThresholdValueHi.setMinimumSize(new java.awt.Dimension(60, 20));
        jTFChalkThresholdValueHi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkThresholdValueHiActionPerformed(evt);
            }
        });
        jPanel6.add(jTFChalkThresholdValueHi, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, -1, -1));

        jLabel4.setText("Analyze Patricles");
        jPanel6.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        jTFChalkAnalyzeParticles.setText("jTextField2");
        jTFChalkAnalyzeParticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkAnalyzeParticlesActionPerformed(evt);
            }
        });
        jPanel6.add(jTFChalkAnalyzeParticles, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 610, -1));

        jLabel15.setText("Measurement");
        jPanel6.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jTFKernelAnalyzeParticles.setText("jTextField2");
        jTFKernelAnalyzeParticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelAnalyzeParticlesActionPerformed(evt);
            }
        });
        jPanel6.add(jTFKernelAnalyzeParticles, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 600, -1));

        jLabel16.setText("Measurement");
        jPanel6.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        jTFChalkMeasurement.setText("jTextField2");
        jTFChalkMeasurement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkMeasurementActionPerformed(evt);
            }
        });
        jPanel6.add(jTFChalkMeasurement, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 620, -1));

        jLabel17.setText("Base");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel18.setText("Chalk Step");
        jPanel6.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jTPMain.addTab("Analysis", jPanel6);

        jBLoad.setText("Load");
        jBLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLoadActionPerformed(evt);
            }
        });

        jBSave.setText("Save");
        jBSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSaveActionPerformed(evt);
            }
        });

        jBExit.setText("Exit");
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jBLoad)
                .addGap(55, 55, 55)
                .addComponent(jBSave)
                .addGap(64, 64, 64)
                .addComponent(jBExit)
                .addContainerGap(405, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBLoad)
                    .addComponent(jBSave)
                    .addComponent(jBExit)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTPMain, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(407, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jTPMain, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 59, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSaveActionPerformed
        System.out.println("save");
        configData.saveProperties();
    }//GEN-LAST:event_jBSaveActionPerformed

    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBExitActionPerformed

    private void jBLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLoadActionPerformed
        System.out.println("load");
        configData.loadProperties();
        loadProperties();
        
    }//GEN-LAST:event_jBLoadActionPerformed

    private void JBScanDirectoryFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBScanDirectoryFileChooserActionPerformed
        JFileChooser jfc = new JFileChooser(System.getProperty("user.home"));
        jfc.setFileSelectionMode (JFileChooser.DIRECTORIES_ONLY);
        int rtn = jfc.showDialog(jTPMain, "Select directory");
        if (rtn == JFileChooser.APPROVE_OPTION) {
            configData.setScanDirectory(jfc.getSelectedFile().getAbsolutePath());
            jTFScanDirectory.setText(jfc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_JBScanDirectoryFileChooserActionPerformed

    private void jCBLightSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBLightSourceActionPerformed
        configData.setLightSource((String) jCBLightSource.getSelectedItem());
    }//GEN-LAST:event_jCBLightSourceActionPerformed

    private void jCBDPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBDPIActionPerformed
        configData.setdPI((String) jCBDPI.getSelectedItem());
    }//GEN-LAST:event_jCBDPIActionPerformed

    private void jTFChalkMeasurementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkMeasurementActionPerformed
        configData.setMeasureParamsChalk(jTFChalkMeasurement.getText());
    }//GEN-LAST:event_jTFChalkMeasurementActionPerformed

    private void jTFKernelAnalyzeParticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelAnalyzeParticlesActionPerformed
        configData.setMeasureParamsChalk(jTFChalkMeasurement.getText());
    }//GEN-LAST:event_jTFKernelAnalyzeParticlesActionPerformed

    private void jTFBaseMeasurementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFBaseMeasurementActionPerformed
                configData.setMeasureParamsBase(jTFBaseMeasurement.getText());
    }//GEN-LAST:event_jTFBaseMeasurementActionPerformed

    private void jTFBaseAnalyzeParticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFBaseAnalyzeParticlesActionPerformed
               configData.setAnalyzeBase(jTFBaseMeasurement.getText());
    }//GEN-LAST:event_jTFBaseAnalyzeParticlesActionPerformed

    private void jTFKernelThresholdValueLoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelThresholdValueLoActionPerformed
                configData.setLowThresholdKernel(jTFKernelThresholdValueLo.getText());
    }//GEN-LAST:event_jTFKernelThresholdValueLoActionPerformed

    private void jTFKernelThresholdValueHiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelThresholdValueHiActionPerformed
                        configData.setHiThresholdKernel(jTFKernelThresholdValueHi.getText());
    }//GEN-LAST:event_jTFKernelThresholdValueHiActionPerformed

    private void jTFKernelMeasurementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelMeasurementActionPerformed
                        configData.setMeasureParamsKernel(jTFKernelMeasurement.getText());
    }//GEN-LAST:event_jTFKernelMeasurementActionPerformed

    private void jTFChalkThresholdValueLoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkThresholdValueLoActionPerformed
                        configData.setLowThresholdChalk(jTFChalkThresholdValueLo.getText());
    }//GEN-LAST:event_jTFChalkThresholdValueLoActionPerformed

    private void jTFChalkThresholdValueHiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkThresholdValueHiActionPerformed
                        configData.setHiThresholdChalk(jTFChalkThresholdValueHi.getText());
    }//GEN-LAST:event_jTFChalkThresholdValueHiActionPerformed

    private void jTFChalkAnalyzeParticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkAnalyzeParticlesActionPerformed
//                        configData.setMeasureParamsChalk(jTFch.getText());
    }//GEN-LAST:event_jTFChalkAnalyzeParticlesActionPerformed

    private void loadProperties() {
        // base properties
        jTFBaseAnalyzeParticles.setText(configData.getAnalyzeBase());
        jTFBaseMeasurement.setText(configData.getMeasureParamsBase());

        // kernel properties
        jTFKernelMeasurement.setText(configData.getMeasureParamsKernel());
        jTFKernelThresholdValueHi.setText(configData.getHiThresholdKernel());
        jTFKernelThresholdValueLo.setText(configData.getLowThresholdKernel());
        jTFKernelAnalyzeParticles.setText(configData.getAnalyzeKernel());
                
        // chalk properties
        jTFChalkThresholdValueHi.setText(configData.getHiThresholdChalk());
        jTFChalkThresholdValueLo.setText(configData.getLowThresholdChalk());
        jTFChalkAnalyzeParticles.setText(configData.getAnalyzeChalk());
        jTFChalkMeasurement.setText(configData.getMeasureParamsChalk());

        // scanner properties
        jTFScanDirectory.setText(configData.getScanDirectory());
        jCBLightSource.setSelectedItem(configData.getLightSource());
        jCBDPI.setSelectedItem(configData.getdPI());
        this.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConfigDialog dialog = new ConfigDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBScanDirectoryFileChooser;
    private javax.swing.JButton jBExit;
    private javax.swing.JButton jBLoad;
    private javax.swing.JButton jBSave;
    private javax.swing.JComboBox<String> jCBDPI;
    private javax.swing.JComboBox<String> jCBLightSource;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTFBaseAnalyzeParticles;
    private javax.swing.JTextField jTFBaseMeasurement;
    private javax.swing.JTextField jTFChalkAnalyzeParticles;
    private javax.swing.JTextField jTFChalkMeasurement;
    private javax.swing.JTextField jTFChalkThresholdValueHi;
    private javax.swing.JTextField jTFChalkThresholdValueLo;
    private javax.swing.JTextField jTFKernelAnalyzeParticles;
    private javax.swing.JTextField jTFKernelMeasurement;
    private javax.swing.JTextField jTFKernelThresholdValueHi;
    private javax.swing.JTextField jTFKernelThresholdValueLo;
    private javax.swing.JTextField jTFScanDirectory;
    private javax.swing.JTabbedPane jTPMain;
    // End of variables declaration//GEN-END:variables
}
